两数之和题目： https://leetcode-cn.com/problems/two-sum/									        Done

# Array 实战题目
* https://leetcode-cn.com/problems/container-with-most-water/								    Done
* https://leetcode-cn.com/problems/move-zeroes/												    Done
* https://leetcode.com/problems/climbing-stairs/											    Done
* https://leetcode-cn.com/problems/3sum/ (高频老题）										        Done

# Linked List 实战题目
* https://leetcode.com/problems/reverse-linked-list/										    Done
* https://leetcode.com/problems/swap-nodes-in-pairs											    Done
* https://leetcode.com/problems/linked-list-cycle											    Done
* https://leetcode.com/problems/linked-list-cycle-ii										    Done
* https://leetcode.com/problems/reverse-nodes-in-k-group/									    Done

# 课后作业
* https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/						    Done
* https://leetcode-cn.com/problems/rotate-array/											    Done
* https://leetcode-cn.com/problems/merge-two-sorted-lists/									    Done
* https://leetcode-cn.com/problems/merge-sorted-array/										    Done
* https://leetcode-cn.com/problems/two-sum/													    Done
* https://leetcode-cn.com/problems/move-zeroes/												    Done
* https://leetcode-cn.com/problems/plus-one/												    Done

 预习题目（栈、队列、优先队列、双端队列）
* https://leetcode-cn.com/problems/valid-parentheses/										    Done
* https://leetcode-cn.com/problems/min-stack/												    Done

# 实战题目
* https://leetcode-cn.com/problems/largest-rectangle-in-histogram							    Done
* https://leetcode-cn.com/problems/sliding-window-maximum									    Done

# 课后作业
* 用 add first 或 add last 这套新的 API 改写 Deque 的代码
* 分析 Queue 和 Priority Queue 的源码
* https://leetcode.com/problems/design-circular-deque									        Done
* https://leetcode.com/problems/trapping-rain-water/								            Done

# 实战题目 / 课后作业（哈希表、映射、集合）
* https://leetcode-cn.com/problems/valid-anagram/description/								    Done
* https://leetcode-cn.com/problems/group-anagrams/								                Done
* https://leetcode-cn.com/problems/two-sum/description/						                    Done

# 参考链接
* [树的遍历 Demo](https://visualgo.net/zh/bst)

# 实战题目 / 课后作业（树）
* https://leetcode-cn.com/problems/binary-tree-inorder-traversal/
* https://leetcode-cn.com/problems/binary-tree-preorder-traversal/
* https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/
* https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/
* https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/

# 参考链接
* [递归代码模板](http://shimo.im/docs/DjqqGCT3xqDYwPyY)

# 实战题目（递归）
* https://leetcode-cn.com/problems/climbing-stairs/
* https://leetcode-cn.com/problems/generate-parentheses/
* https://leetcode-cn.com/problems/invert-binary-tree/description/
* https://leetcode-cn.com/problems/validate-binary-search-tree
* https://leetcode-cn.com/problems/maximum-depth-of-binary-tree
* https://leetcode-cn.com/problems/minimum-depth-of-binary-tree
* https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/

# 每日一课
* [如何优雅地计算斐波那契数列](https://time.geekbang.org/dailylesson/detail/100028406)

# 课后作业
* https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/
* https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal
* https://leetcode-cn.com/problems/combinations/
* https://leetcode-cn.com/problems/permutations/
* https://leetcode-cn.com/problems/permutations-ii/

# 参考链接
* [分治代码模板](https://shimo.im/docs/3xvghYh3JJPKwdvt)
* [括号生成问题](https://leetcode-cn.com/problems/generate-parentheses/)

# 预习题目（分治、回溯）
* https://leetcode-cn.com/problems/powx-n/
* https://leetcode-cn.com/problems/subsets/

# 参考链接
* [牛顿迭代法原理](http://www.matrix67.com/blog/archives/361)
* [牛顿迭代法代码](http://www.voidcn.com/article/p-eudisdmk-zm.html)

# 实战题目
* https://leetcode-cn.com/problems/majority-element/description/ （简单、但是高频）
* https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/
* https://leetcode-cn.com/problems/n-queens/

# 参考链接
* [DFS 代码模板（递归写法、非递归写法）](http://shimo.im/docs/ddgwCccJQKxkrcTq)
* [BFS 代码模板](http://shimo.im/docs/P8TqKHGKt3ytkYYd)

# 实战题目（深度、广度优先）
* https://leetcode-cn.com/problems/binary-tree-level-order-traversal/#/description
* https://leetcode-cn.com/problems/minimum-genetic-mutation/#/description
* https://leetcode-cn.com/problems/generate-parentheses/#/description
* https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/#/description

# 课后作业
* https://leetcode-cn.com/problems/word-ladder/description/
* https://leetcode-cn.com/problems/word-ladder-ii/description/
* https://leetcode-cn.com/problems/number-of-islands/
* https://leetcode-cn.com/problems/minesweeper/description/

# 参考链接
* [coin change 题目](https://leetcode-cn.com/problems/coin-change/)
* [动态规划定义](https://zh.wikipedia.org/wiki/动态规划)

# 课后作业（贪心）
* https://leetcode-cn.com/problems/lemonade-change/description/
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/description/
* https://leetcode-cn.com/problems/assign-cookies/description/
* https://leetcode-cn.com/problems/walking-robot-simulation/description/
* https://leetcode-cn.com/problems/jump-game/ 、 https://leetcode-cn.com/problems/jump-game-ii/

# 参考链接
* [二分查找代码模板](https://shimo.im/docs/hjQqRQkGgwd9g36J)
* [Fast InvSqrt() 扩展阅读](https://www.beyond3d.com/content/articles/8/)

# 实战题目（二分）
* https://leetcode-cn.com/problems/sqrtx/
* https://leetcode-cn.com/problems/valid-perfect-square/

# 课后作业
* https://leetcode-cn.com/problems/search-in-rotated-sorted-array/
* https://leetcode-cn.com/problems/search-a-2d-matrix/
* https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/

# 参考链接
* [递归代码模板](http://shimo.im/docs/DjqqGCT3xqDYwPyY/)
* [分治代码模板](http://shimo.im/docs/3xvghYh3JJPKwdvt/)
* [动态规划定义](https://en.wikipedia.org/wiki/Dynamic_programming)

# 参考链接
* [不同路径题目](https://leetcode-cn.com/problems/unique-paths/)
* [不同路径 2 题目](https://leetcode-cn.com/problems/unique-paths-ii/)
* [最长公共子序列题目](https://leetcode-cn.com/problems/longest-common-subsequence/)
* [MIT 动态规划课程最短路径算法](https://www.bilibili.com/video/av53233912?from=search&seid=2847395688604491997)

# 实战题目（动态规划）
* https://leetcode-cn.com/problems/climbing-stairs/description/
* https://leetcode-cn.com/problems/triangle/description/
* https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up)
* https://leetcode-cn.com/problems/maximum-subarray/
* https://leetcode-cn.com/problems/maximum-product-subarray/description/
* https://leetcode-cn.com/problems/coin-change/description/

# 实战题目
* https://leetcode-cn.com/problems/house-robber/
* https://leetcode-cn.com/problems/house-robber-ii/description/
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/#/description
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/
* https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/solution/yi-ge-fang-fa-tuan-mie-6-dao-gu-piao-wen-ti-by-l-3/

# 高级 DP 实战题目
* https://leetcode-cn.com/problems/perfect-squares/
* https://leetcode-cn.com/problems/edit-distance/ （重点）
* https://leetcode-cn.com/problems/jump-game/
* https://leetcode-cn.com/problems/jump-game-ii/
* https://leetcode-cn.com/problems/unique-paths/
* https://leetcode-cn.com/problems/unique-paths-ii/
* https://leetcode-cn.com/problems/unique-paths-iii/
* https://leetcode-cn.com/problems/coin-change/
* https://leetcode-cn.com/problems/coin-change-2/

注意：请大家先消化前面的实战题目，高级 DP 的方法和题解会在课程后面解锁。

# 课后作业
* https://leetcode-cn.com/problems/longest-valid-parentheses/
* https://leetcode-cn.com/problems/minimum-path-sum/
* https://leetcode-cn.com/problems/edit-distance/
* https://leetcode-cn.com/problems/decode-ways
* https://leetcode-cn.com/problems/maximal-square/
* https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/
* https://leetcode-cn.com/problems/frog-jump/
* https://leetcode-cn.com/problems/split-array-largest-sum
* https://leetcode-cn.com/problems/student-attendance-record-ii/
* https://leetcode-cn.com/problems/task-scheduler/
* https://leetcode-cn.com/problems/palindromic-substrings/
* https://leetcode-cn.com/problems/minimum-window-substring/
* https://leetcode-cn.com/problems/burst-balloons/

# 参考链接
* [二叉树的层次遍历](https://leetcode-cn.com/problems/binary-tree-level-order-traversal/)
* [实现 Trie](https://leetcode-cn.com/problems/implement-trie-prefix-tree/solution/)
* [Tire 树代码模板](https://shimo.im/docs/Pk6vPY3HJ9hKkh33)

# 实战题目 / 课后作业
* https://leetcode-cn.com/problems/implement-trie-prefix-tree/#/description
* https://leetcode-cn.com/problems/word-search-ii/
* 分析单词搜索 2 用 Tire 树方式实现的时间复杂度，请同学们提交在第 6 周的学习总结中。

# 参考链接
* [岛屿数量](https://leetcode-cn.com/problems/number-of-islands/)
* [并查集代码模板](https://shimo.im/docs/ydPCH33xDhK9YwWR)

# 实战题目 / 课后作业
* https://leetcode-cn.com/problems/friend-circles
* https://leetcode-cn.com/problems/number-of-islands/
* https://leetcode-cn.com/problems/surrounded-regions/

# 参考链接（剪枝）
* https://leetcode-cn.com/problems/climbing-stairs/
* https://leetcode-cn.com/problems/generate-parentheses/
* https://leetcode-cn.com/problems/n-queens
* https://leetcode-cn.com/problems/valid-sudoku/description/					                Done
* https://leetcode-cn.com/problems/sudoku-solver/#/description					                Done

# 实战题目
* https://leetcode-cn.com/problems/word-ladder/
* https://leetcode-cn.com/problems/minimum-genetic-mutation/

（启发式搜索）
* [A* 代码模板](https://shimo.im/docs/CXvjHyWhpQcxXjcw/)
* [相似度测量方法](https://dataaspirant.com/2015/04/11/five-most-popular-similarity-measures-implementation-in-python/)
* [二进制矩阵中的最短路径的 A* 解法](https://leetcode.com/problems/shortest-path-in-binary-matrix/discuss/313347/A*-search-in-Python)
* [8 puzzles 解法比较](https://zxi.mytechroad.com/blog/searching/8-puzzles-bidirectional-astar-vs-bidirectional-bfs/)

# 实战题目
* https://leetcode-cn.com/problems/shortest-path-in-binary-matrix/
* https://leetcode-cn.com/problems/sliding-puzzle/
* https://leetcode-cn.com/problems/sudoku-solver/					                            Done

# 参考链接
* [平衡树](https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree)

# 参考链接
* [如何从十进制转换为二进制](https://zh.wikihow.com/从十进制转换为二进制)

# 参考链接
* [N 皇后位运算代码示例](https://zh.wikihow.com/从十进制转换为二进制)

# 实战题目 / 课后作业（位运算）
* https://leetcode-cn.com/problems/number-of-1-bits/ 				                            Done
* https://leetcode-cn.com/problems/power-of-two/				                                Done
* https://leetcode-cn.com/problems/reverse-bits/				                                Done
* https://leetcode-cn.com/problems/n-queens/description/
* https://leetcode-cn.com/problems/n-queens-ii/description/
* https://leetcode-cn.com/problems/counting-bits/description/                                   Done

# 参考链接
* [布隆过滤器的原理和实现](https://www.cnblogs.com/cpselvis/p/6265825.html)
* [使用布隆过滤器解决缓存击穿、垃圾邮件识别、集合判重](https://blog.csdn.net/tianyaleixiaowu/article/details/74721877)
* [布隆过滤器 Python 代码示例](https://shimo.im/docs/xKwrcwrDxRv3QpKG/)
* [布隆过滤器 Python 实现示例](https://www.geeksforgeeks.org/bloom-filters-introduction-and-python-implementation/)
* [高性能布隆过滤器 Python 实现示例](https://github.com/jhgg/pybloof)
* [布隆过滤器 Java 实现示例 1](https://github.com/lovasoa/bloomfilter/blob/master/src/main/java/BloomFilter.java)
* [布隆过滤器 Java 实现示例 2](https://github.com/Baqend/Orestes-Bloomfilter)

# 参考链接
* [Understanding the Meltdown exploit](https://www.sqlpassion.at/archive/2018/01/06/understanding-the-meltdown-exploit-in-my-own-simple-words/)
* [替换算法总揽](https://en.wikipedia.org/wiki/Cache_replacement_policies)
* [LRU Cache Python 代码示例](https://shimo.im/docs/tTxRkGwJpXG6WkGY/)

# 实战题目 / 课后作业
* https://leetcode-cn.com/problems/lru-cache/#/

# 参考链接
* [十大经典排序算法](https://www.cnblogs.com/onepixel/p/7674659.html)
* [快速排序代码示例](https://shimo.im/docs/98KjvGwwGpTpYGKy/)
* [归并排序代码示例](https://shimo.im/docs/YqgG6vtdKwkXJkWx/)
* [堆排序代码示例](https://shimo.im/docs/6kRVHRphpgjHgCtx/)
* 直播课回顾: https://pan.baidu.com/s/1sFuZ8GjDCXy5mPCNLZhHxw 提取码: 2rdy

# 课后作业
* 用自己熟悉的编程语言，手写各种初级排序代码，提交到第 7 周学习总结中。

# 参考链接
* [十大经典排序算法](https://www.cnblogs.com/onepixel/p/7674659.html)
* [9 种经典排序算法可视化动画](https://www.bilibili.com/video/av25136272)
* [6 分钟看完 15 种排序算法动画展示](https://www.bilibili.com/video/av63851336)

# 实战题目 / 课后作业
* https://leetcode-cn.com/problems/relative-sort-array/
* https://leetcode-cn.com/problems/valid-anagram/
* https://leetcode-cn.com/problems/design-a-leaderboard/
* https://leetcode-cn.com/problems/merge-intervals/
* https://leetcode-cn.com/problems/reverse-pairs/

# 参考链接
* [十大经典排序算法](https://www.cnblogs.com/onepixel/p/7674659.html)
* [9 种经典排序算法可视化动画](https://www.bilibili.com/video/av25136272)
* [6 分钟看完 15 种排序算法动画展示](https://www.bilibili.com/video/av63851336)

# 实战题目 / 课后作业（动态规划）
* https://leetcode-cn.com/problems/relative-sort-array/
* https://leetcode-cn.com/problems/valid-anagram/
* https://leetcode-cn.com/problems/design-a-leaderboard/
* https://leetcode-cn.com/problems/merge-intervals/
* https://leetcode-cn.com/problems/reverse-pairs/

# 参考链接
* [爬楼梯](https://leetcode-cn.com/problems/climbing-stairs/)
* [使用最小花费爬楼梯](https://leetcode-cn.com/problems/min-cost-climbing-stairs/)
* [编辑距离](https://leetcode-cn.com/problems/edit-distance/)

# 课后作业（高级动态规划）
* https://leetcode-cn.com/problems/longest-increasing-subsequence/
* https://leetcode-cn.com/problems/decode-ways/
* https://leetcode-cn.com/problems/longest-valid-parentheses/
* https://leetcode-cn.com/problems/maximal-rectangle/
* https://leetcode-cn.com/problems/distinct-subsequences/
* https://leetcode-cn.com/problems/race-car/

# 参考链接
* [不可变字符串](https://lemire.me/blog/2017/07/07/are-your-strings-immutable/)
* [Atoi 代码示例](https://shimo.im/docs/KkDKkpWxjjrJXdpY/)

# 字符串基础问题
* https://leetcode-cn.com/problems/to-lower-case/		                                        Done
* https://leetcode-cn.com/problems/length-of-last-word/                                         Done
* https://leetcode-cn.com/problems/jewels-and-stones/                                           Done
* https://leetcode-cn.com/problems/first-unique-character-in-a-string/                          Done
* https://leetcode-cn.com/problems/string-to-integer-atoi/                                      Done

# 字符串操作问题
* https://leetcode-cn.com/problems/longest-common-prefix/description/                           Done
* https://leetcode-cn.com/problems/reverse-string
* https://leetcode-cn.com/problems/reverse-string-ii/
* https://leetcode-cn.com/problems/reverse-words-in-a-string/
* https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/
* https://leetcode-cn.com/problems/reverse-only-letters/

# 异位词问题
* https://leetcode-cn.com/problems/valid-anagram/
* https://leetcode-cn.com/problems/group-anagrams/
* https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/

# 回文串问题
* https://leetcode-cn.com/problems/valid-palindrome/
* https://leetcode-cn.com/problems/valid-palindrome-ii/
* https://leetcode-cn.com/problems/longest-palindromic-substring/

# 最长子串、子序列问题
* https://leetcode-cn.com/problems/longest-common-subsequence/
* https://leetcode-cn.com/problems/edit-distance/
* https://leetcode-cn.com/problems/longest-palindromic-substring/

# 字符串 +DP 问题
* https://leetcode-cn.com/problems/regular-expression-matching/
* https://leetcode-cn.com/problems/regular-expression-matching/solution/ji-yu-guan-fang-ti-jie-gen-xiang-xi-de-jiang-jie-b/
* https://leetcode-cn.com/problems/wildcard-matching/
* https://leetcode-cn.com/problems/distinct-subsequences/

# 参考链接
* [Boyer-Moore 算法](http://xn--https-ni33a//www.ruanyifeng.com/blog/2013/05/boyer-moore_string_search_algorithm.html)
* [Sunday 算法](https://blog.csdn.net/u012505432/article/details/52210975)
* [字符串匹配暴力法代码示例](https://shimo.im/docs/dQDxQW8yXPXxh3Hg/)
* [Rabin-Karp 代码示例](https://shimo.im/docs/KXDdkT99TVtXvTXP/)
* [KMP 字符串匹配算法视频](https://www.bilibili.com/video/av11866460?from=search&seid=17425875345653862171)
* [字符串匹配的 KMP 算法](http://www.ruanyifeng.com/blog/2013/05/Knuth–Morris–Pratt_algorithm.html)

# 字符串 +DP 问题
* https://leetcode-cn.com/problems/first-unique-character-in-a-string/
* https://leetcode-cn.com/problems/string-to-integer-atoi/
* https://leetcode-cn.com/problems/reverse-string-ii/
* https://leetcode-cn.com/problems/reverse-words-in-a-string/
* https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/
* https://leetcode-cn.com/problems/reverse-only-letters/
* https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/
* https://leetcode-cn.com/problems/longest-palindromic-substring/
* https://leetcode-cn.com/problems/isomorphic-strings/
* https://leetcode-cn.com/problems/valid-palindrome-ii/
* https://leetcode-cn.com/problems/wildcard-matching
* https://leetcode-cn.com/problems/longest-valid-parentheses
* https://leetcode-cn.com/problems/distinct-subsequences/













